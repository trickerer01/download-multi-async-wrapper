## author: trickerer01           <-- COMMENTS
## THIS FILE IS FOR SYNTAX REFERENCE ONLY

### TITLE:script_1               <-- <OPTIONAL> SCRIPT TITLE (USED IN LOG AND RUN FILE NAMES AS A SUFFIX, 1-20 SYMBOLS)
### TITLEINCREMENT:5             <-- <OPTIONAL> SCRIPT RUN NUMBER AUTOMATIC INCREMENT SUFFIX LENGTH, 1-9, HERE IT'S 00001, 00002, ETC.
### DESTPATH:D:/download/        <-- <OPTIONAL> DOWNLOAD DESTINATION BASE FOLDER, DEFAULT: './'
                                     CAN BE USED INSTEAD OF '-path' CMD ARGUMENT (BUT NOT BOTH)
### BAKPATH:D:/bak/              <-- <OPTIONAL> SCRIPT BACKUP FOLDER, SAVED BEFORE UPDATE (SEE BELOW), DEFAULT: './'
### RUNPATH:D:/run/              <-- <OPTIONAL> RUN FILES DESTINATION FOLDER, USED WHEN DOWNLOADER CMDLINE IS TOO LONG, DEFAULT: './'
### LOGPATH:D:/logs/             <-- <OPTIONAL> LOG FILES DESTINATION FOLDER, LOGS WILL BE SAVED TO DISK ALWAYS, DEFAULT: './'
### DATESUB:NO                   <-- <OPTIONAL> DATE SUBFOLDER '/mmdd/' IN BASE DEST FOLDER CREATION FLAG, DEFAULT: 'YES'
                                     CAN ALSO USE OTHER VALUES: 'False', 'true', 'No', 'YES', 'N', 'y', '0', '1', etc.
### UPDATE:YES                   <-- <OPTIONAL> ID RANGE (SEE BELOW) UPDATE WITH FETCHED MAX ID FLAG, DEFAULT: 'NO'
### UPDATE_OFFSETS:{"rc":-500}   <-- <OPTIONAL> MAX ID UPDATE OFFSET PER DOWNLOADER (USUALLY NEGATIVE)
### NOPROXY_FETCHES:["rg","NM"]  <-- <OPTIONAL> DOWNLOADERS FOR WHICH MAX ID IS ALWAYS FETCHED WITHOUT PROXY EVEN IF PROVIDED
### PYTHON:python3               <-- <REQUIRED> PATH TO PYTHON EXECUTABLE (NORMALLY ROOT PYTHON INSTALL IS PRESENT IN SYSTEM PATH VARIABLE)
### (vid) ###                    <-- <REQUIRED> CATEGORY MARKER, AT LEAST 1 SYMBOL (SUBFOLDER NAME: 'vid')
# nm                             <-- <REQUIRED> DOWNLOADER TYPE
# 50000 51000                    <-- <REQUIRED> AT LEAST ONE OR TWO IDS FOR RANGE (SEE BELOW)
# downloader:D:/Projects/NM      <-- <REQUIRED> PATH TO THE DOWNLOADER BASE FOLDER
# common:-dmode touch            <-- <OPTIONAL> ARGUMENTS TO ADD TO EVERY QUERY
# common:-log trace --dump-tags  <-- <OPTIONAL> ARGUMENTS TO ADD TO EVERY QUERY
# sub:a                          <-- <REQUIRED> SUBFOLDER FOR QUERY (NEW QUERY MARKER)
-quality 1080p                   <-- <DOWNLOADER ARGUMENTS> QUERY ARGUMENT (QUALITY)
-a -b -c -dfff                   <-- <DOWNLOADER ARGUMENTS> EXCLUDED TAGS
ggg                              <-- <DOWNLOADER ARGUMENTS> REQUIRED TAG
                                     AT LEAST ONE 'TAGS' ARGUMENT IS REQUIRED FOR QUERY TO BE VALID
                                     MIXING OF REQUIRED / EXCLUDED TAGS IN A ROW IS NOT RECOMMENDED: '-a -b -c -dfff ggg'
# send                           <-- <REQUIRED> QUERY END MARKER
                                     '<cmdline base...> -quality 1080p -a -b -c -dfff ggg'
                                     DOWNLOADER ARGUMENTS STILL ACCUMULATE AFTER THIS, SEE BELOW
# sub:b ## Real name: "asd"      <-- TRAILING COMMENTS CAN BE USED TOO, LOOKS FOR ' ##' DELIMITER
-+ggg                            <-- REMOVE PREVIOUSLY REQUIRED SINGLE TAG (REMOVES FROM DOWNLOADER ARGUMENTS LIST)
-ggg                             <-- <DOWNLOADER ARGUMENTS> EXCLUDE PREVIOUSLY REQUIRED TAG
-(x,z)                           <-- <DOWNLOADER ARGUMENTS> EXCLUDED TAGS COMBINATION
(h~i~j~k)                        <-- <DOWNLOADER ARGUMENTS> REQUIRED 'ANY OF' TAGS GROUP
# send                           <-- '<cmdline base...> -quality 1080p -a -b -c -dfff -ggg -(x,z) (h~i~j~k)'

# sub:c      ## kinda bad name   <-- THIS IS A VALID TRAILING COMMENT TOO
-h -i -j -k                      <-- REMOVE PREVIOUS TAGS GROUP AND EXCLUDE THEM (REMOVES FROM DOWNLOADER ARGUMENTS LIST)
                                     MUST MATCH THIS WAY EXACTLY OTHERWISE YOU GET SOMETHING LIKE '(h~i~j~k~l) -h -i -j -k'
                                     LOGS WILL MENTION MULTIPLE EXCLUSIONS LIKE THIS WHERE MATCHING 'OR' GROUP WASN'T FOUND
--(x,z)                          <-- REMOVE PREVIOUSLY EXCLUDED TAGS COMBINATION (REMOVES FROM DOWNLOADER ARGUMENTS LIST)
(l~m~n)                          <-- <DOWNLOADER ARGUMENTS> REQUIRED 'ANY OF' TAGS GROUP
# send                           <-- '<cmdline base...> -quality 1080p -a -b -c -dfff -ggg -h -i -j -k (l~m~n)'

# sub:d
--quality -+1080p                <-- REMOVE PREVIOUS PARAM (QUALITY) QUERY ARGUMENT (REMOVES FROM DOWNLOADER ARGUMENTS LIST)
-l -m -n                         <-- REMOVE PREVIOUS TAGS GROUP AND EXCLUDE THEM (REMOVES FROM DOWNLOADER ARGUMENTS LIST)
--dfff                           <-- REMOVE PREVIOUS EXCLUDED SINGLE TAG (REMOVES FROM DOWNLOADER ARGUMENTS LIST)
-quality 360p                    <-- <DOWNLOADER ARGUMENTS> QUERY ARGUMENT (QUALITY)
-utp always                      <-- <DOWNLOADER ARGUMENTS> QUERY ARGUMENT (UNLISTED VIDEOS DOWNLOAD POLICY)
# send                           <-- '<cmdline base...> -a -b -c -ggg -h -i -j -k -l -m -n -quality 360p -utp always'
# end                            <-- <REQUIRED> DOWNLOADER QUERIES FINISH MARKER

                                 <-- AT THIS POINT 4 NM QUERIES WERE CREATED WHICH WILL BE THEN COMBINED INTO A SINGLE DOWNLOAD SCRIPT
                                 <-- 'python "D:/Projects/NM/src/ids.py" -path "<PATH>" -start 50000 -end 50999
                                     -dmode touch -log trace --dump-tags -script
                                     "a: -quality 1080p -a -b -c -dfff ggg;
                                      b: -quality 1080p -a -b -c -dfff -ggg -(x,z) (h~i~j~k);
                                      c: -quality 1080p -a -b -c -dfff -ggg -h -i -j -k (l~m~n);
                                      d: -a -b -c -ggg -h -i -j -k -l -m -n -quality 360p -utp always"'
                                 <-- WHICH DOWNLOADS MATCHING VIDEOS TO 4 DIFFERENT FOLDERS IN A SINGLE PASS

# RV                             <-- DOWNLOADER TYPE CAN BE UPPERCASE TOO
# p10 s1                         <-- <OPTIONAL> SWITCH TO PAGES SCAN INSTEAD OF IDS (PAGES COUNT, STARTING PAGE)
# 3050000                        <-- A SIGNLE ID MEANS FROM THIS AND UP (TILL CURRENT MAX ID)
# downloader:D:/Projects/RV
# common:-log info -timeout 30 -retries 100 -throttle 100 --dump-descriptions --dump-tags
# sub:a
-quality 1080p
-search aaa                      <-- <DOWNLOADER ARGUMENTS> USE SEARCH STRING (RV)
# send                           <-- '<cmdline base...> -quality 1080p -search aaa'

# sub:b
##--search -+aaa                 <-- ONE WAY TO REMOVE PREVIOUS SEARCH STRING (REMOVES FROM DOWNLOADER ARGUMENTS LIST)
-aaa                             <-- QUICKER WAY TO REMOVE PREVIOUS SEARCH STRING (REMOVES FROM DOWNLOADER ARGUMENTS LIST)
                                     DOES NOT APPEND '-aaa' TO ARGUMENTS LIST
-search_tag tag1,tag2,tag3       <-- <DOWNLOADER ARGUMENTS> SEARCH FOR 3 DIFFERENT TAGS
-search_rule_tag any             <-- <DOWNLOADER ARGUMENTS> MATCHING ANY OF THEM
# send                           <-- '<cmdline base...> -quality 1080p -search_tag tag1,tag2,tag3 -search_rule_tag any'

# sub:c
-any                             <-- QUICKLY REMOVE PREVIOUS SEARCH RULE (REMOVES FROM DOWNLOADER ARGUMENTS LIST)
                                     DOES NOT APPEND '-any' TO ARGUMENTS LIST
-tag1 -tag2 -tag3                <-- QUICKLY REMOVE PREVIOUS SEARCH TAGS (REMOVES FROM DOWNLOADER ARGUMENTS LIST)
                                     AND EXCLUDE THEM (ADDS TO DOWNLOADER ARGUMENTS LIST)
-search_tag tag4,tag5            <-- <DOWNLOADER ARGUMENTS> SEARCH FOR 2 DIFFERENT TAGS
-search_rule_tag all             <-- <DOWNLOADER ARGUMENTS> MATCHING BOTH OF THEM
# send                           <-- '<cmdline base...> -quality 1080p -tag1 -tag2 -tag3 -search_tag tag4,tag5 -search_rule_tag all'
# end
                                 <-- AT THIS POINT 3 RV QUERIES WERE CREATED WHICH WILL NOT BE OPTIMIZED BECAUSE OF SEARCH BEING USED
                                 <-- 'python "D:/Projects/RV/src/ids.py" -pages 10 -start 1 -stop_id 3050000 -begin_id <FETCHED_MAX_ID>
                                     -path "<PATH>/a" -log info -timeout 30 -retries 100 -throttle 100 --dump-descriptions --dump-tags
                                     -quality 1080p -search aaa'
                                 <-- 'python "D:/Projects/RV/src/ids.py" -pages 10 -start 1 -stop_id 3050000 -begin_id <FETCHED_MAX_ID>
                                     -path "<PATH>/b" -log info -timeout 30 -retries 100 -throttle 100 --dump-descriptions --dump-tags
                                     -quality 1080p -search_tag tag1,tag2,tag3 -search_rule_tag any'
                                 <-- 'python "D:/Projects/RV/src/ids.py" -pages 10 -start 1 -stop_id 3050000 -begin_id <FETCHED_MAX_ID>
                                     -path "<PATH>/c" -log info -timeout 30 -retries 100 -throttle 100 --dump-descriptions --dump-tags
                                     -quality 1080p -tag1 -tag2 -tag3 -search_tag tag4,tag5 -search_rule_tag all'

# rn
# -10000                         <-- A SINGLE NEGATIVE ID MEANS "LAST X POSTS"
# downloader:D:/Projects/Ruxx
# common:...
# sub:...
...
# send
# end

# rx
# 5050000 5051000
# downloader:D:/Projects/Ruxx
# common:...
# sub:...
...
# send
# end

### (img) ###                    <-- SECOND CATEGORY MARKER (SUBFOLDER NAME: 'img')
# rx
# 5050000 5051000
# downloader:D:/Projects/Ruxx
# common:...
# sub:...
...
# send
# end

### (comic) ###                  <-- THIRD CATEGORY MARKER
...
# end

### (vid ) ###                   <-- FOURTH CATEGORY MARKER. TRAILING SPACE ALLOWS TO DOWNLOAD TO THE SAME FOLDER AS FIRST CATEGORY
                                     (SUBFOLDER NAME: 'vid')
# nm
# 50000 51000
# downloader:D:/Projects/NM
# common:-dmode touch
# common:-log trace
# common:--dump-tags
# sub:a
-quality 1080p
-aa -bb -cc -dd
fff
# send

# sub:b
-fff
-(xx,zz)
(hh~ii~jj~kk)
# send
# end
                                 <-- AT THIS POINT 2 NM QUERIES WERE CREATED WHICH WILL BE THEN COMBINED INTO A SINGLE DOWNLOAD SCRIPT
                                 <-- 'python "D:/Projects/NM/src/ids.py" -path "<PATH>" -start 50000 -end 50999
                                     -dmode touch -log trace --dump-tags -script
                                     "a: -quality 1080p -aa -bb -cc -dd fff;
                                      b: -quality 1080p -aa -bb -cc -dd -fff -(xx,zz) (hh~ii~jj~kk)"'
                                 <-- WHICH DOWNLOADS MATCHING VIDEOS TO 2 DIFFERENT FOLDERS IN A SINGLE PASS
                                     WHILE QUERY IS DIFFERENT IT WILL BE DOWNLOADED TO THE SAME SUBFOLDERS AS 'vid' CATEGORY
